import java.util.List;
import java.util.Arrays;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
    	class ItemKeyWithQuantity{
    		public String itemKey;
    		public Number quantity;
    		
    		public ItemKeyWithQuantity(String s, Number q) {
    		this.itemKey =s;
    		this.quantity = q;
    		}
    		
    		public Item getItem() {
    			for(Item item:itemRepository.findAll()) {
    				if(item.getId() == this.itemKey) {
    					return item;
    				}
    			}
    			return new Item("NONE","NONE",0);
    		}
    	}
    	
    	List<ItemKeyWithQuantity> inputsList;
    	inputsList = Arrays.asList();
    	
        for (String temp : inputs) {
        	String itemKey = temp.substring(0,8);
        	Number itemQuantity = Integer.parseInt(temp.substring(11,1));
        	inputsList.add(new ItemKeyWithQuantity(itemKey,itemQuantity));
        }

        class CalculateDiscount{
        	Double netTotal = 0.0;
        	Boolean canUseBUY30SAVE6YUAN =false;
        	Boolean canUseHalfDiscount = false;
        	
        	SalesPromotion sales_50 = new SalesPromotion("UNDEFINED","UNDEFINED",Arrays.asList());
             	public CalculateDiscount() {
        		for(ItemKeyWithQuantity item: inputsList) {
        			netTotal+= item.getItem().getPrice()*item.quantity.doubleValue();
	        	}
        		
        		if(netTotal>30) {
        			this.canUseBUY30SAVE6YUAN = true;
        			buy30save6yuan();
        		}
        	
            	for(SalesPromotion s: salesPromotionRepository.findAll()) {
            		if(s.getType() == "50%_DISCOUNT_ON_SPECIFIED_ITEMS") {
            			sales_50 = s;
            		}
            	}
            	
	        	for(ItemKeyWithQuantity item: inputsList) {
	        		if(sales_50.getRelatedItems().contains(item.itemKey)) {
	        			this.canUseHalfDiscount = true;
	        			netTotal = halfDiscountOnSpecItm();
	        		}			
	        	}
        	}
        	
	        public double buy30save6yuan() {
	        	return netTotal - 6;
	        }
	        
	        public double halfDiscountOnSpecItm(){
	        	Double total = 0.0;
	        	
	        	for(ItemKeyWithQuantity item: inputsList) {
	        		if(sales_50.getRelatedItems().contains(item.itemKey)) {
	        			total+= item.getItem().getPrice()/2*item.quantity.doubleValue();
	        		}
	        		total+=  item.getItem().getPrice()*item.quantity.doubleValue();
	        	}
	        	return total;
	        }
	        
	        public void output() {
	        	String output = "";
	        	String saved = "";
        		for(ItemKeyWithQuantity item: inputsList) {
        			String productName = item.getItem().getName();
        			if(sales_50.getRelatedItems().contains(item.itemKey)) {
        				saved = Double.toString(item.getItem().getPrice()/2*item.quantity.doubleValue());
        			}
        			String price = Double.toString(item.getItem().getPrice() * item.quantity.doubleValue());
        			output += productName + " x " + Double.toString(item.quantity.doubleValue()) 
        				+ " = " + price + " yuan\n";
        		}
	        	if (canUseBUY30SAVE6YUAN == false && canUseHalfDiscount == false) {
	        		System.out.print("============= Order details =============\n" + output +
	        						"-----------------------------------\n" + 
	        						"Total is "+ netTotal +" yuan\n" + 
	        						"===================================" );
	        	}else if (canUseBUY30SAVE6YUAN == true && canUseHalfDiscount == false) {
	        		System.out.print("============= Order details =============\n" + output +
    						"-----------------------------------\n" + 
    						"Promotion used:\n" + "Deduct 6 yuan when the order reaches 30 yuan, saving 6 yuan\n"+
    						"-----------------------------------\n" + 
    						"Total is "+ netTotal +" yuan\n" + 
    						"===================================" );
	        	}else if (canUseBUY30SAVE6YUAN == false && canUseHalfDiscount == true || 
	        				(canUseBUY30SAVE6YUAN == true && canUseHalfDiscount == true) && praseInt(saved) > 6) {
	        		System.out.print("============= Order details =============\n" + output +
    						"-----------------------------------\n" + 
    						"Promotion used:\n" + 
    						"Half price for certain dishes (braised chicken and cold noodles), saving "+
    						 saved + " yuan\n"+
    						"-----------------------------------\n" + 
    						"Total is "+ netTotal +" yuan\n" + 
    						"===================================" );
	        }else {
	        	System.out.print("============= Order details =============\n" + output +
						"-----------------------------------\n" + 
						"Promotion used:\n" + "Deduct 6 yuan when the order reaches 30 yuan, saving 6 yuan\n"+
						"-----------------------------------\n" + 
						"Total is "+ netTotal +" yuan\n" + 
						"===================================" );
	        }
	       }
			private int praseInt(String saved) {
				// TODO Auto-generated method stub
				return 0;
			}
        }
        return null;
    }
}
